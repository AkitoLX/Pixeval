<controls:EnhancedPage x:Class="Pixeval.Pages.IllustrationViewer.ImageViewerPage"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:controls="using:Pixeval.Controls"
                       xmlns:core="using:Microsoft.Xaml.Interactions.Core"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:ui="using:Pixeval.Util.UI"
                       Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                       Loaded="ImageViewerPage_OnLoaded"
                       mc:Ignorable="d">
    <controls:EnhancedPage.Resources>
        <ResourceDictionary>
            <Storyboard x:Name="ResetImageScaleStoryboard"
                        Completed="ResetImageScaleStoryboard_OnCompleted">
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleX"
                                 To="1"
                                 Duration="0:0:1" />
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleY"
                                 To="1"
                                 Duration="0:0:1" />
            </Storyboard>
            <Storyboard x:Name="ImageScaledIn200PercentStoryboard"
                        Completed="ImageScaledIn200PercentStoryboard_OnCompleted">
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleX"
                                 To="2"
                                 Duration="0:0:1" />
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleY"
                                 To="2"
                                 Duration="0:0:1" />
            </Storyboard>
            <Storyboard x:Name="ResetImageTranslationStoryboard"
                        Completed="ResetImageTranslationStoryboard_OnCompleted">
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="TranslateX"
                                 To="0"
                                 Duration="0:0:1" />
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="TranslateY"
                                 To="0"
                                 Duration="0:0:1" />
            </Storyboard>
            <Storyboard x:Name="LeftImageFadeInStoryboard">

            </Storyboard>
            <Storyboard x:Name="LeftImageMoveInStoryboard">
                <DoubleAnimation
                                 Storyboard.TargetName="IllustrationLeftImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleX"
                                 To="1"
                                 Duration="0:0:1" >
                    <DoubleAnimation.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation
                                 Storyboard.TargetName="IllustrationLeftImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleY"
                                 To="1"
                                 Duration="0:0:1">
                    <DoubleAnimation.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
            <Storyboard x:Name="RightImageFadeInStoryboard">
                
            </Storyboard>
            <Storyboard x:Name="RightImageMoveInStoryboard">
                <DoubleAnimation
                                 Storyboard.TargetName="IllustrationRightImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleX"
                                 To="1"
                                 Duration="0:0:1" >
                    <DoubleAnimation.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation
                                 Storyboard.TargetName="IllustrationRightImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleY"
                                 To="1"
                                 Duration="0:0:1" >
                    <DoubleAnimation.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
        </ResourceDictionary>
    </controls:EnhancedPage.Resources>
    <Grid>
        <Grid x:Name="IllustrationOriginalImageContainer"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              ui:ClipService.ClipToBounds="True"
              PointerWheelChanged="IllustrationOriginalImageContainer_OnPointerWheelChanged">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Image x:Name="ThumbnailLeft"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Source="{x:Bind _viewModel.IllustrationViewerPageViewModel.PrevThumbnail(), Mode=OneWay}"
                   Stretch="Uniform"
                   Visibility="{x:Bind _viewModel.IllustrationViewerPageViewModel.CalculatePrevImageVisibility(), Mode=OneWay}"
                   Grid.Column="0"
                   RenderTransformOrigin="0.5,0.5"
                   Tapped="ThumbnailLeft_OnTapped">
                <Image.RenderTransform>
                    <CompositeTransform x:Name="IllustrationLeftImageRenderTransform"
                                        ScaleX="0.4"
                                        ScaleY="0.4" />
                </Image.RenderTransform>
            </Image>
            <Image x:Name="ThumbnailRight"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Source="{x:Bind _viewModel.IllustrationViewerPageViewModel.NextThumbnail(), Mode=OneWay}"
                   Stretch="Uniform"
                   Visibility="{x:Bind _viewModel.IllustrationViewerPageViewModel.CalculateNextImageVisibility(), Mode=OneWay}"
                   Grid.Column="2"
                   RenderTransformOrigin="0.5,0.5"
                   Tapped="ThumbnailRight_OnTapped">
                <Image.RenderTransform>
                    <CompositeTransform x:Name="IllustrationRightImageRenderTransform"
                                        ScaleX="0.4"
                                        ScaleY="0.4" />
                </Image.RenderTransform>
            </Image>
            <Image Grid.Column="1" x:Name="IllustrationOriginalImage"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   DoubleTapped="IllustrationOriginalImage_OnDoubleTapped"
                   IsDoubleTapEnabled="True"
                   ManipulationCompleted="IllustrationOriginalImage_OnManipulationCompleted"
                   ManipulationDelta="IllustrationOriginalImage_OnManipulationDelta"
                   ManipulationMode="TranslateX,TranslateY"
                   RenderTransformOrigin="0.5,0.5"
                   Source="{x:Bind _viewModel.OriginalImageSource, Mode=OneWay}"
                   Stretch="Uniform">
                <Image.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="/ImageViewerPage/IllustrationInfoAndCommentsMenuFlyoutItem"
                                        Icon="{ui:FontIcon Glyph=InfoE946}"
                                        Tapped="IllustrationInfoAndCommentsMenuFlyoutItem_OnTapped">
                            <MenuFlyoutItem.KeyboardAccelerators>
                                <KeyboardAccelerator Key="F12" />
                            </MenuFlyoutItem.KeyboardAccelerators>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.PlayGifCommand}"
                                        Visibility="{x:Bind _viewModel.IllustrationViewerPageViewModel.IsUgoira}" />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.ZoomInCommand}" />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.ZoomOutCommand}" />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.BookmarkCommand}" />
                        <MenuFlyoutSeparator />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.CopyCommand}" />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.SaveCommand}" />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.SaveMangaCommand}"
                                        Visibility="{x:Bind _viewModel.IllustrationViewerPageViewModel.IsManga}" />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.SaveMangaAsCommand}"
                                        Visibility="{x:Bind _viewModel.IllustrationViewerPageViewModel.IsManga}" />
                        <MenuFlyoutSeparator />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.GenerateLinkCommand}" />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.GenerateWebLinkCommand}" />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.OpenInWebBrowserCommand}" />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.ShowQrCodeCommand}" />
                        <MenuFlyoutItem Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.ShareCommand}" />
                    </MenuFlyout>
                </Image.ContextFlyout>
                <Image.RenderTransform>
                    <CompositeTransform x:Name="IllustrationOriginalImageRenderTransform"
                                        ScaleX="{x:Bind _viewModel.Scale, Mode=OneWay}"
                                        ScaleY="{x:Bind _viewModel.Scale, Mode=OneWay}" />
                </Image.RenderTransform>
            </Image>
        </Grid>
        <Grid HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="{x:Bind _viewModel.GetLoadingMaskVisibility(_viewModel.LoadingOriginalSourceTask), Mode=OneWay}">
            <Rectangle Fill="{ThemeResource PixevalAppAcrylicBrush}" />
            <StackPanel HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <ProgressRing Width="50"
                              Height="50"
                              IsIndeterminate="False"
                              Value="{x:Bind _viewModel.LoadingProgress, Mode=OneWay}" />
                <TextBlock Margin="0,10,0,0"
                           FontSize="{StaticResource PixevalSubscriptFontSize}"
                           Text="{x:Bind _viewModel.LoadingText, Mode=OneWay}" />
            </StackPanel>
        </Grid>
        <!--  工具栏的识别区  -->
        <Rectangle Width="400"
                   Height="100"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Bottom"
                   Fill="Black"
                   Opacity="0">
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="PointerEntered">
                    <core:ChangePropertyAction PropertyName="Opacity"
                                               TargetObject="{x:Bind CommandBorder}"
                                               Value="0.7" />
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="PointerExited">
                    <core:ChangePropertyAction PropertyName="Opacity"
                                               TargetObject="{x:Bind CommandBorder}"
                                               Value="0" />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </Rectangle>
        <Border x:Name="CommandBorder"
                Margin="0,0,0,10"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                BorderThickness="0"
                CornerRadius="10"
                Opacity="0"
                Translation="0,0,30">
            <Border.Shadow>
                <ThemeShadow x:Name="CommandBorderDropShadow" />
            </Border.Shadow>
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="PointerEntered">
                    <core:ChangePropertyAction PropertyName="Opacity"
                                               Value="1" />
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="PointerExited">
                    <core:ChangePropertyAction PropertyName="Opacity"
                                               TargetObject="{x:Bind CommandBorder}"
                                               Value="0.7" />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
            <Border.OpacityTransition>
                <ScalarTransition />
            </Border.OpacityTransition>
            <CommandBar Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                        CornerRadius="10"
                        DefaultLabelPosition="Collapsed"
                        OverflowButtonVisibility="Collapsed">
                <AppBarButton x:Name="BookmarkButton"
                              x:Uid="/ImageViewerPage/BookmarkButton"
                              Width="50"
                              Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.BookmarkCommand}" />
                <AppBarButton x:Uid="/ImageViewerPage/ZoomInButton"
                              Width="50"
                              Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.ZoomInCommand}" />
                <AppBarButton x:Uid="/ImageViewerPage/ZoomOutButton"
                              Width="50"
                              Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.ZoomOutCommand}" />
                <AppBarButton x:Uid="/ImageViewerPage/SaveCurrentImageButton"
                              Width="50"
                              Command="{x:Bind _viewModel.IllustrationViewerPageViewModel.SaveCommand}" />
            </CommandBar>
        </Border>
    </Grid>
</controls:EnhancedPage>