<ui:EnhancedPage x:Class="Pixeval.Pages.IllustrationViewer.ImageViewerPage"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:core="using:Microsoft.Xaml.Interactions.Core"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:illustrationViewer="using:Pixeval.Pages.IllustrationViewer"
                 xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:ui="using:Pixeval.Util.UI"
                 Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                 Loaded="ImageViewerPage_OnLoaded"
                 mc:Ignorable="d">
    <ui:EnhancedPage.Resources>
        <ResourceDictionary>
            <Storyboard x:Name="ResetImageScaleStoryboard"
                        Completed="ResetImageScaleStoryboard_OnCompleted">
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleX"
                                 To="1"
                                 Duration="0:0:1" />
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleY"
                                 To="1"
                                 Duration="0:0:1" />
            </Storyboard>
            <Storyboard x:Name="ImageScaledIn200PercentStoryboard"
                        Completed="ImageScaledIn200PercentStoryboard_OnCompleted">
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleX"
                                 To="2"
                                 Duration="0:0:1" />
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="ScaleY"
                                 To="2"
                                 Duration="0:0:1" />
            </Storyboard>
            <Storyboard x:Name="ResetImageTranslationStoryboard"
                        Completed="ResetImageTranslationStoryboard_OnCompleted">
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="TranslateX"
                                 To="0"
                                 Duration="0:0:1" />
                <DoubleAnimation EasingFunction="{x:Bind _easingFunction}"
                                 Storyboard.TargetName="IllustrationOriginalImageRenderTransform"
                                 Storyboard.TargetProperty="TranslateY"
                                 To="0"
                                 Duration="0:0:1" />
            </Storyboard>
        </ResourceDictionary>
    </ui:EnhancedPage.Resources>
    <Grid>
        <Grid x:Name="IllustrationOriginalImageContainer"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              ui:ClipService.ClipToBounds="True"
              PointerWheelChanged="IllustrationOriginalImageContainer_OnPointerWheelChanged">
            <Image x:Name="IllustrationOriginalImage"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   DoubleTapped="IllustrationOriginalImage_OnDoubleTapped"
                   IsDoubleTapEnabled="True"
                   ManipulationCompleted="IllustrationOriginalImage_OnManipulationCompleted"
                   ManipulationDelta="IllustrationOriginalImage_OnManipulationDelta"
                   ManipulationMode="TranslateX,TranslateY"
                   RenderTransformOrigin="0.5,0.5"
                   Source="{x:Bind _viewModel.OriginalImageSource, Mode=OneWay}"
                   Stretch="Uniform">
                <Image.RenderTransform>
                    <CompositeTransform x:Name="IllustrationOriginalImageRenderTransform" />
                </Image.RenderTransform>
            </Image>
        </Grid>
        <Grid HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="{x:Bind _viewModel.GetLoadingMaskVisibility(_viewModel.LoadingOriginalSourceTask), Mode=OneWay}">
            <Rectangle Fill="{ThemeResource PixevalAppAcrylicBrush}" />
            <StackPanel HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <ProgressRing Width="50"
                              Height="50"
                              IsIndeterminate="False"
                              Value="{x:Bind _viewModel.LoadingProgress, Mode=OneWay}" />
                <TextBlock Margin="0,10,0,0"
                           FontSize="{StaticResource PixevalSubscriptFontSize}"
                           Text="{x:Bind _viewModel.LoadingText, Mode=OneWay}" />
            </StackPanel>
        </Grid>
        <!--  工具栏的识别区  -->
        <Rectangle Width="400"
                   Height="100"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Bottom"
                   Fill="Black"
                   Opacity="0">
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="PointerEntered">
                    <core:ChangePropertyAction PropertyName="Opacity"
                                               TargetObject="{x:Bind CommandBorder}"
                                               Value="0.7" />
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="PointerExited">
                    <core:ChangePropertyAction PropertyName="Opacity"
                                               TargetObject="{x:Bind CommandBorder}"
                                               Value="0" />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </Rectangle>
        <Border x:Name="CommandBorder"
                Margin="0,0,0,10"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                BorderThickness="0"
                CornerRadius="10"
                Opacity="0"
                Translation="0,0,30">
            <Border.Shadow>
                <ThemeShadow x:Name="CommandBorderDropShadow" />
            </Border.Shadow>
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="PointerEntered">
                    <core:ChangePropertyAction PropertyName="Opacity"
                                               Value="1" />
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="PointerExited">
                    <core:ChangePropertyAction PropertyName="Opacity"
                                               TargetObject="{x:Bind CommandBorder}"
                                               Value="0.7" />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
            <Border.OpacityTransition>
                <ScalarTransition />
            </Border.OpacityTransition>
            <CommandBar Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                        CornerRadius="10"
                        DefaultLabelPosition="Collapsed"
                        OverflowButtonVisibility="Collapsed">
                <AppBarButton x:Uid="/ImageViewerPage/BookmarkButton"
                              Width="50"
                              Click="BookmarkButton_OnClick"
                              Icon="{x:Bind illustrationViewer:IllustrationViewerPage.GetBookmarkButtonIcon(_viewModel.IllustrationViewerPageViewModel.FirstImageViewerPageViewModel.IsBookmarked), Mode=OneWay}" />
                <AppBarButton x:Uid="/ImageViewerPage/ZoomInButton"
                              Width="50"
                              Click="ZoomInButton_OnClick">
                    <AppBarButton.Icon>
                        <SymbolIcon Symbol="ZoomIn" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton x:Uid="/ImageViewerPage/ZoomOutButton"
                              Width="50"
                              Click="ZoomOutButton_OnClick">
                    <AppBarButton.Icon>
                        <SymbolIcon Symbol="ZoomOut" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton x:Uid="/ImageViewerPage/SaveCurrentImageButton"
                              Width="50"
                              Icon="{ui:FontIcon Glyph=SaveE74E}" />
            </CommandBar>
        </Border>
    </Grid>
</ui:EnhancedPage>